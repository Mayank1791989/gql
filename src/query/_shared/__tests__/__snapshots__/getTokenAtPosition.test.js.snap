exports[`should able to parse Relay.QL queries with interpolation multi line 1`] = `
Object {
  "end": 15,
  "prevChar": "a",
  "start": 11,
  "state": Object {
    "indentLevel": 5,
    "jsInlineFragment": null,
    "kind": "Field",
    "level": 0,
    "levels": Array [
      5,
    ],
    "name": "name",
    "needsAdvance": true,
    "needsSeperator": false,
    "prevState": Object {
      "indentLevel": 5,
      "jsInlineFragment": null,
      "kind": "Selection",
      "level": 0,
      "levels": Array [
        5,
      ],
      "name": null,
      "needsAdvance": false,
      "needsSeperator": false,
      "prevState": Object {
        "indentLevel": 5,
        "jsInlineFragment": null,
        "kind": "SelectionSet",
        "level": 0,
        "levels": Array [
          5,
        ],
        "name": null,
        "needsAdvance": false,
        "needsSeperator": false,
        "prevState": Object {
          "indentLevel": 4,
          "kind": "FragmentDefinition",
          "level": 0,
          "levels": Array [
            5,
          ],
          "name": "Name",
          "needsAdvance": false,
          "needsSeperator": false,
          "prevState": Object {
            "indentLevel": 4,
            "kind": "Definition",
            "level": 0,
            "name": null,
            "needsSeperator": false,
            "prevState": Object {
              "indentLevel": 4,
              "kind": "Document",
              "level": 0,
              "name": null,
              "needsSeperator": false,
              "prevState": Object {
                "level": 0,
              },
              "rule": Array [
                "Definition",
              ],
              "step": 0,
              "type": null,
            },
            "rule": [Function],
            "step": 0,
            "type": null,
          },
          "rule": Array [
            Object {
              "match": [Function],
              "style": "keyword",
            },
            Object {
              "ofRule": Object {
                "match": [Function],
                "style": "def",
                "update": [Function],
              },
            },
            "TypeCondition",
            Object {
              "isList": true,
              "ofRule": "Directive",
              "separator": undefined,
            },
            "SelectionSet",
          ],
          "step": 4,
          "type": "Test",
        },
        "rule": Array [
          Object {
            "match": [Function],
            "style": "punctuation",
          },
          Object {
            "isList": true,
            "ofRule": "Selection",
            "separator": undefined,
          },
          Object {
            "match": [Function],
            "style": "punctuation",
          },
        ],
        "step": 1,
        "type": null,
      },
      "rule": [Function],
      "step": 0,
      "type": null,
    },
    "rule": Array [
      Object {
        "match": [Function],
        "style": "property",
        "update": [Function],
      },
      Object {
        "ofRule": "Arguments",
      },
      Object {
        "isList": true,
        "ofRule": "Directive",
        "separator": undefined,
      },
      Object {
        "ofRule": "SelectionSet",
      },
    ],
    "step": 0,
    "type": null,
  },
  "string": "name",
  "style": "property",
}
`;

exports[`should able to parse Relay.QL queries with interpolation single line 1`] = `
Object {
  "end": 14,
  "prevChar": "n",
  "start": 10,
  "state": Object {
    "indentLevel": 5,
    "jsInlineFragment": null,
    "kind": "Field",
    "level": 0,
    "levels": Array [
      5,
    ],
    "name": "name",
    "needsAdvance": true,
    "needsSeperator": false,
    "prevState": Object {
      "indentLevel": 5,
      "jsInlineFragment": null,
      "kind": "Selection",
      "level": 0,
      "levels": Array [
        5,
      ],
      "name": null,
      "needsAdvance": false,
      "needsSeperator": false,
      "prevState": Object {
        "indentLevel": 5,
        "jsInlineFragment": null,
        "kind": "SelectionSet",
        "level": 0,
        "levels": Array [
          5,
        ],
        "name": null,
        "needsAdvance": false,
        "needsSeperator": false,
        "prevState": Object {
          "indentLevel": 4,
          "kind": "FragmentDefinition",
          "level": 0,
          "levels": Array [
            5,
          ],
          "name": "Name",
          "needsAdvance": false,
          "needsSeperator": false,
          "prevState": Object {
            "indentLevel": 4,
            "kind": "Definition",
            "level": 0,
            "name": null,
            "needsSeperator": false,
            "prevState": Object {
              "indentLevel": 4,
              "kind": "Document",
              "level": 0,
              "name": null,
              "needsSeperator": false,
              "prevState": Object {
                "level": 0,
              },
              "rule": Array [
                "Definition",
              ],
              "step": 0,
              "type": null,
            },
            "rule": [Function],
            "step": 0,
            "type": null,
          },
          "rule": Array [
            Object {
              "match": [Function],
              "style": "keyword",
            },
            Object {
              "ofRule": Object {
                "match": [Function],
                "style": "def",
                "update": [Function],
              },
            },
            "TypeCondition",
            Object {
              "isList": true,
              "ofRule": "Directive",
              "separator": undefined,
            },
            "SelectionSet",
          ],
          "step": 4,
          "type": "Test",
        },
        "rule": Array [
          Object {
            "match": [Function],
            "style": "punctuation",
          },
          Object {
            "isList": true,
            "ofRule": "Selection",
            "separator": undefined,
          },
          Object {
            "match": [Function],
            "style": "punctuation",
          },
        ],
        "step": 1,
        "type": null,
      },
      "rule": [Function],
      "step": 0,
      "type": null,
    },
    "rule": Array [
      Object {
        "match": [Function],
        "style": "property",
        "update": [Function],
      },
      Object {
        "ofRule": "Arguments",
      },
      Object {
        "isList": true,
        "ofRule": "Directive",
        "separator": undefined,
      },
      Object {
        "ofRule": "SelectionSet",
      },
    ],
    "step": 0,
    "type": null,
  },
  "string": "name",
  "style": "property",
}
`;

exports[`should able to parse Relay.QL queries with interpolation with curly braces inside interpolation 1`] = `
Object {
  "end": 14,
  "prevChar": "m",
  "start": 10,
  "state": Object {
    "indentLevel": 5,
    "jsInlineFragment": null,
    "kind": "Field",
    "level": 0,
    "levels": Array [
      5,
    ],
    "name": "name",
    "needsAdvance": true,
    "needsSeperator": false,
    "prevState": Object {
      "indentLevel": 5,
      "jsInlineFragment": null,
      "kind": "Selection",
      "level": 0,
      "levels": Array [
        5,
      ],
      "name": null,
      "needsAdvance": false,
      "needsSeperator": false,
      "prevState": Object {
        "indentLevel": 5,
        "jsInlineFragment": null,
        "kind": "SelectionSet",
        "level": 0,
        "levels": Array [
          5,
        ],
        "name": null,
        "needsAdvance": false,
        "needsSeperator": false,
        "prevState": Object {
          "indentLevel": 4,
          "kind": "FragmentDefinition",
          "level": 0,
          "levels": Array [
            5,
          ],
          "name": "Name",
          "needsAdvance": false,
          "needsSeperator": false,
          "prevState": Object {
            "indentLevel": 4,
            "kind": "Definition",
            "level": 0,
            "name": null,
            "needsSeperator": false,
            "prevState": Object {
              "indentLevel": 4,
              "kind": "Document",
              "level": 0,
              "name": null,
              "needsSeperator": false,
              "prevState": Object {
                "level": 0,
              },
              "rule": Array [
                "Definition",
              ],
              "step": 0,
              "type": null,
            },
            "rule": [Function],
            "step": 0,
            "type": null,
          },
          "rule": Array [
            Object {
              "match": [Function],
              "style": "keyword",
            },
            Object {
              "ofRule": Object {
                "match": [Function],
                "style": "def",
                "update": [Function],
              },
            },
            "TypeCondition",
            Object {
              "isList": true,
              "ofRule": "Directive",
              "separator": undefined,
            },
            "SelectionSet",
          ],
          "step": 4,
          "type": "Test",
        },
        "rule": Array [
          Object {
            "match": [Function],
            "style": "punctuation",
          },
          Object {
            "isList": true,
            "ofRule": "Selection",
            "separator": undefined,
          },
          Object {
            "match": [Function],
            "style": "punctuation",
          },
        ],
        "step": 1,
        "type": null,
      },
      "rule": [Function],
      "step": 0,
      "type": null,
    },
    "rule": Array [
      Object {
        "match": [Function],
        "style": "property",
        "update": [Function],
      },
      Object {
        "ofRule": "Arguments",
      },
      Object {
        "isList": true,
        "ofRule": "Directive",
        "separator": undefined,
      },
      Object {
        "ofRule": "SelectionSet",
      },
    ],
    "step": 0,
    "type": null,
  },
  "string": "name",
  "style": "property",
}
`;

exports[`test should able to parse Relay.QL tags 1`] = `
Object {
  "end": 12,
  "prevChar": "e",
  "start": 8,
  "state": Object {
    "indentLevel": 4,
    "kind": "Field",
    "level": 0,
    "levels": Array [
      4,
    ],
    "name": "name",
    "needsAdvance": true,
    "needsSeperator": false,
    "prevState": Object {
      "indentLevel": 4,
      "kind": "Selection",
      "level": 0,
      "levels": Array [
        4,
      ],
      "name": null,
      "needsAdvance": false,
      "needsSeperator": false,
      "prevState": Object {
        "indentLevel": 4,
        "kind": "SelectionSet",
        "level": 0,
        "levels": Array [
          4,
        ],
        "name": null,
        "needsAdvance": false,
        "needsSeperator": false,
        "prevState": Object {
          "indentLevel": 3,
          "kind": "FragmentDefinition",
          "level": 0,
          "levels": Array [
            4,
          ],
          "name": null,
          "needsAdvance": false,
          "needsSeperator": false,
          "prevState": Object {
            "indentLevel": 3,
            "kind": "Definition",
            "level": 0,
            "name": null,
            "needsSeperator": false,
            "prevState": Object {
              "indentLevel": 3,
              "kind": "Document",
              "level": 0,
              "name": null,
              "needsSeperator": false,
              "prevState": Object {
                "level": 0,
              },
              "rule": Array [
                "Definition",
              ],
              "step": 0,
              "type": null,
            },
            "rule": [Function],
            "step": 0,
            "type": null,
          },
          "rule": Array [
            Object {
              "match": [Function],
              "style": "keyword",
            },
            Object {
              "ofRule": Object {
                "match": [Function],
                "style": "def",
                "update": [Function],
              },
            },
            "TypeCondition",
            Object {
              "isList": true,
              "ofRule": "Directive",
              "separator": undefined,
            },
            "SelectionSet",
          ],
          "step": 4,
          "type": "Test",
        },
        "rule": Array [
          Object {
            "match": [Function],
            "style": "punctuation",
          },
          Object {
            "isList": true,
            "ofRule": "Selection",
            "separator": undefined,
          },
          Object {
            "match": [Function],
            "style": "punctuation",
          },
        ],
        "step": 1,
        "type": null,
      },
      "rule": [Function],
      "step": 0,
      "type": null,
    },
    "rule": Array [
      Object {
        "match": [Function],
        "style": "property",
        "update": [Function],
      },
      Object {
        "ofRule": "Arguments",
      },
      Object {
        "isList": true,
        "ofRule": "Directive",
        "separator": undefined,
      },
      Object {
        "ofRule": "SelectionSet",
      },
    ],
    "step": 0,
    "type": null,
  },
  "string": "name",
  "style": "property",
}
`;

exports[`test should able to parse multiple Relay.QL tags in single file 1`] = `
Object {
  "end": 22,
  "prevChar": "e",
  "start": 18,
  "state": Object {
    "indentLevel": 3,
    "kind": "TypeCondition",
    "level": 0,
    "name": null,
    "needsAdvance": true,
    "needsSeperator": false,
    "prevState": Object {
      "indentLevel": 3,
      "kind": "FragmentDefinition",
      "level": 0,
      "name": null,
      "needsAdvance": false,
      "needsSeperator": false,
      "prevState": Object {
        "indentLevel": 3,
        "kind": "Definition",
        "level": 0,
        "name": null,
        "needsSeperator": false,
        "prevState": Object {
          "indentLevel": 3,
          "kind": "Document",
          "level": 0,
          "name": null,
          "needsSeperator": false,
          "prevState": Object {
            "level": 0,
          },
          "rule": Array [
            "Definition",
          ],
          "step": 0,
          "type": null,
        },
        "rule": [Function],
        "step": 0,
        "type": null,
      },
      "rule": Array [
        Object {
          "match": [Function],
          "style": "keyword",
        },
        Object {
          "ofRule": Object {
            "match": [Function],
            "style": "def",
            "update": [Function],
          },
        },
        "TypeCondition",
        Object {
          "isList": true,
          "ofRule": "Directive",
          "separator": undefined,
        },
        "SelectionSet",
      ],
      "step": 2,
      "type": "Test",
    },
    "rule": Array [
      Object {
        "match": [Function],
        "style": "keyword",
      },
      Object {
        "match": [Function],
        "style": "atom",
        "update": [Function],
      },
    ],
    "step": 1,
    "type": null,
  },
  "string": "Test",
  "style": "atom",
}
`;
