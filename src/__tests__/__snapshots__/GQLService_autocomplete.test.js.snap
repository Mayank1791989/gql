// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Query: autocomplete works in query files 1`] = `
Array [
  Object {
    "description": "",
    "text": "name",
    "type": "string",
  },
]
`;

exports[`Schema: autocomplete works in schema files 1`] = `
Array [
  Object {
    "description": "",
    "text": "Query",
    "type": "Object",
  },
  Object {
    "description": "",
    "text": "Viewer",
    "type": "Object",
  },
  Object {
    "description": "The \`String\` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
    "text": "String",
    "type": "Scalar",
  },
  Object {
    "description": "The \`Int\` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. ",
    "text": "Int",
    "type": "Scalar",
  },
  Object {
    "description": "The \`Float\` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point). ",
    "text": "Float",
    "type": "Scalar",
  },
  Object {
    "description": "The \`Boolean\` scalar type represents \`true\` or \`false\`.",
    "text": "Boolean",
    "type": "Scalar",
  },
  Object {
    "description": "The \`ID\` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as \`\\"4\\"\`) or integer (such as \`4\`) input value will be accepted as an ID.",
    "text": "ID",
    "type": "Scalar",
  },
]
`;
